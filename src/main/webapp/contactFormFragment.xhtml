<ui:composition xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:p="http://primefaces.org/ui"
    xmlns:jsf="http://xmlns.jcp.org/jsf">
    <!-- Dialog Contact Form -->
    <p:dialog id="contactDialog" header="#{sendFeedbackDialog.getFormHeader()}" widgetVar="contactForm" modal="true">
        <p:fragment>
            <h:form id="emailForm" class="form-horizontal">
                <!-- to: Support -->
                <div class="form-group">
                    <label for="messageTo" class="col-sm-3 control-label">#{bundle['contact.to']}</label>
                    <div class="col-sm-9">
                        <p id="messageTo" class="form-control-static">#{sendFeedbackDialog.getMessageTo()}</p>
                    </div>
                </div>
                <ui:fragment rendered="#{sendFeedbackDialog.isLoggedIn()}">
                <!-- from email (logged in + auto-filled) -->
                    <div class="form-group">
                        <label for="userEmailStatic" class="col-sm-3 control-label">#{bundle['contact.from']}</label>
                        <div class="col-sm-9">
                            <p id="userEmailStatic" class="form-control-static">#{sendFeedbackDialog.loggedInUserEmail()}</p>
                        </div>
                    </div>
                </ui:fragment>
                <ui:fragment rendered="#{!sendFeedbackDialog.isLoggedIn()}">
                <!-- from email (not logged in) -->
                    <div class="form-group">
                        <label for="userEmail" class="col-sm-3 control-label">#{bundle['contact.from']} <span class="glyphicon glyphicon-asterisk text-danger" title="#{bundle.requiredField}"/></label>
                        <div class="col-sm-9">
                            <p:inputText id="userEmail" styleClass="form-control" size="30" value="#{sendFeedbackDialog.userEmail}"
                                         validator="#{sendFeedbackDialog.validateUserEmail}" validatorMessage="#{bundle['contact.from.invalid']}" requiredMessage="#{bundle['contact.from.required']}" required="#{param['DO_VALIDATION']}"/>
                        <h:message for="userEmail" styleClass="bg-danger text-danger"/>
                        </div>
                    </div>
                </ui:fragment>
                <!-- subject -->
                <div class="form-group">
                    <label for="messageSubject" class="col-sm-3 control-label">#{bundle['contact.subject']} <span class="glyphicon glyphicon-asterisk text-danger" title="#{bundle.requiredField}"/></label>
                    <div class="col-sm-9">
                        <p:inputText id="messageSubject" styleClass="form-control" value="#{sendFeedbackDialog.messageSubject}"
                                     requiredMessage="#{bundle['contact.subject.required']}" required="#{param['DO_VALIDATION']}"/>                        
                        <h:message for="messageSubject" styleClass="bg-danger text-danger"/>
                    </div>
                </div>   
                <!-- message -->
                <div class="form-group">
                    <label for="userMessage" class="col-sm-3 control-label">#{bundle['contact.msg']} <span class="glyphicon glyphicon-asterisk text-danger" title="#{bundle.requiredField}"/></label>
                    <div class="col-sm-9">
                        <p:inputTextarea id="userMessage" styleClass="form-control" value="#{sendFeedbackDialog.userMessage}"
                            required="#{param['DO_VALIDATION']}" requiredMessage="#{bundle['contact.msg.required']}" autoResize="false" rows="10"/>
                        <h:message for="userMessage" styleClass="bg-danger text-danger"/>
                    </div>
                </div>
                <!-- validation -->
                <div class="form-group">
                    <div class="col-sm-offset-3 col-sm-9">
                    	<script>
                    	//create an object to keep track of the captcha controls
                    	 var CaptchaManager = function (){
                    		 this.captcha_array=[];
                    		 var locale='#{dataverseLocale.locale.language}'
 								//adjust locale to suite google
 								if(locale=="fr"){
 									locale="fr-CA"	
 								}else{
 									locale="en"
 								}
                           	  	this.locale=locale;
                    		 
                    	 }
                    	 CaptchaManager.prototype.addCaptcha = function(_obj) {
                    		 this.captcha_array.push(_obj)
                    	 }
                    	 //only load the script once
                    	 CaptchaManager.prototype.loadExternalScript = function() {
                           	 $.ajax({
						 	 	url: "https://www.google.com/recaptcha/api.js?onload=onloadCallback&amp;render=explicit&amp;hl="+captchaManager.locale,
						 	 	dataType: "script"
							});
                          };      
                          var Captcha = function (_submit_but,_captcha_placeholder) {
                             	this.submit_but=_submit_but;
                             	this.captcha_placeholder=_captcha_placeholder;
                          	  	//start by disabling the button
                          	  	this.captchaExpCallback()
                          };

                        Captcha.prototype.captchaExpCallback = function(){
							$(this.submit_but).prop('disabled', true);
						}
                        //instantiate captcha manager
                        var captchaManager=new CaptchaManager();
						 $(function() {
							//once the jquery is loaded - load the captcha
							 var  contact_captcha=new Captcha('#emailForm\\:snd_msg','my-contact-recaptcha-placeholder');
							 captchaManager.addCaptcha(contact_captcha);
							 if($('#dataverseUserForm\\:accountInfoView\\:save').length){
								var user_captcha=new Captcha('#dataverseUserForm\\:accountInfoView\\:save','my-recaptcha-placeholder')
								captchaManager.addCaptcha(user_captcha);
							 }
							 captchaManager.loadExternalScript();
							
						});
						 function onloadCallback(){
							 //create all captcha controls
							 $.each( captchaManager["captcha_array"], function( index, value ){
							 					 
								var obj=value
								grecaptcha.render(
								   document.getElementById(obj.captcha_placeholder), 
								   {
									 callback: function(val){
			                             if(val){
											$(obj.submit_but).prop("disabled", false);
			                             }}, 
									 'expired-callback': function(){
											$(obj.submit_but).prop('disabled', true);
										},
									 sitekey: "6Le1QiQTAAAAAA-3y61xzXcfjpPd0LhLqQhExh6X"
								   });
							 });
								   
							}
                         </script>
                        <div id="my-contact-recaptcha-placeholder" ></div>
                    </div>
                </div>
                <!-- send | cancel buttons -->
                <div class="button-block">
                    <p:commandButton id="snd_msg" styleClass="btn btn-default" value="#{bundle['contact.send']}"
                                    update="@form" oncomplete="if (args &amp;&amp; !args.validationFailed) PF('contactForm').hide();" actionListener="#{sendFeedbackDialog.sendMessage}">
                        <f:param name="DO_VALIDATION" value="true"/>
                        
                    </p:commandButton>
                    <button type="button" onclick="PF('contactForm').hide()" class="btn btn-default" value="#{bundle.cancel}">
                        #{bundle.cancel}
                    </button>
                </div>
            </h:form>
        </p:fragment>
    </p:dialog>
</ui:composition>